function Screen.init 0
push constant 16384
pop static 0
push constant 1
pop static 3
push constant 0
pop static 2
push static 3
pop static 1
push constant 0
return
function Screen.clearScreen 0
push constant 0
return
function Screen.setColor 0
push argument 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 3
pop static 1
goto IF_END0
label IF_FALSE0
push static 2
pop static 1
label IF_END0
push constant 0
return
function Screen.drawPixel 3
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push static 0
push local 0
add
call Memory.peek 1
pop local 1
push argument 0
push constant 15
and
pop argument 0
push constant 1
pop local 2
label WHILE_EXP0
push argument 0
push constant 0
gt
not
if-goto WHILE_END0
push local 2
push local 2
add
pop local 2
push argument 0
push constant 1
sub
pop argument 0
goto WHILE_EXP0
label WHILE_END0
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
or
pop local 1
goto IF_END0
label IF_FALSE0
push local 1
push local 2
not
and
pop local 1
label IF_END0
push static 0
push local 0
add
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawblock 3
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push static 0
push local 0
add
call Memory.peek 1
pop local 1
push constant 1
neg
pop local 2
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
or
pop local 1
goto IF_END0
label IF_FALSE0
push local 1
push local 2
not
and
pop local 1
label IF_END0
push static 0
push local 0
add
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawBitArray 3
push argument 1
push constant 32
call Math.multiply 2
push argument 0
add
pop local 0
push static 0
push local 0
add
push argument 2
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.vector_mul 0
push argument 0
push argument 3
call Math.multiply 2
push argument 1
push argument 2
call Math.multiply 2
sub
return
function Screen.sigin_of_vector_mul 0
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.vector_mul 4
call Math.sign 1
return
function Screen.abs_of_vector_mul 0
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.vector_mul 4
call Math.abs 1
return
function Screen.coalesce 0
push argument 0
push argument 2
eq
push argument 1
push argument 3
eq
and
return
function Screen.drawLine 7
push argument 2
push argument 0
sub
call Math.sign 1
pop local 0
push argument 3
push argument 1
sub
call Math.sign 1
pop local 1
push argument 2
push argument 0
sub
call Math.abs 1
pop local 2
push argument 3
push argument 1
sub
call Math.abs 1
pop local 3
push argument 0
pop local 4
push argument 1
pop local 5
push constant 0
pop local 6
label WHILE_EXP0
push local 4
push local 5
push argument 2
push argument 3
call Screen.coalesce 4
not
not
if-goto WHILE_END0
push local 4
push local 5
call Screen.drawPixel 2
pop temp 0
push local 6
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push local 0
add
pop local 4
push local 6
push local 3
add
pop local 6
goto IF_END0
label IF_FALSE0
push local 5
push local 1
add
pop local 5
push local 6
push local 2
sub
pop local 6
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawRectangle 3
push argument 0
pop local 0
push argument 1
pop local 1
push constant 16
pop local 2
label WHILE_EXP0
push local 2
push local 0
lt
not
if-goto WHILE_END0
push local 2
push constant 16
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 1
push argument 3
lt
not
if-goto WHILE_END1
push argument 0
pop local 0
label WHILE_EXP2
push local 0
push local 2
lt
not
if-goto WHILE_END2
push local 0
push local 1
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
label WHILE_EXP3
push local 0
push constant 16
add
push argument 2
lt
not
if-goto WHILE_END3
push local 0
push local 1
call Screen.drawblock 2
pop temp 0
push local 0
push constant 16
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
label WHILE_EXP4
push local 0
push argument 2
lt
not
if-goto WHILE_END4
push local 0
push local 1
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Screen.drawCircle 2
push argument 2
push constant 182
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
neg
push constant 1
add
pop local 0
label WHILE_EXP0
push local 0
push argument 2
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
