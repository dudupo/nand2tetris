<class>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<varDec>
		<keyword> var </keyword>
		<keyword> int </keyword>
		<identifier> a </identifier>
		<symbol> , </symbol>
		<identifier> b </identifier>
		<symbol> , </symbol>
		<identifier> c </identifier>
		<symbol> ; </symbol>
	</varDec>
	<subroutineDec>
		<keyword> method </keyword>
		<keyword> int </keyword>
		<identifier> miki </identifier>
		<parameterList>
			<keyword> int </keyword>
			<identifier> j </identifier>
		</parameterList>
		<subroutineBody>
			<symbol> { </symbol>
			<lateStatement>
				<keyword> let </keyword>
				<identifier> c </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier> qulki </identifier>
						</term>
						<term>
							<symbol> + </symbol>
						</term>
							<expression>
								<term>
									<identifier> d </identifier>
								</term>
								<term>
									<symbol> - </symbol>
								</term>
									<expression>
										<term>
											<identifier> r </identifier>
										</term>
										<term>
											<symbol> + </symbol>
										</term>
										<term>
											<identifier> w </identifier>
										</term>
									</expression>
							</expression>
					</expression>
					<symbol> ; </symbol>
			</lateStatement>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<subroutineDec>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<identifier> aaa </identifier>
		<parameterList>
			<keyword> int </keyword>
			<identifier> j </identifier>
		</parameterList>
		<subroutineBody>
			<symbol> { </symbol>
			<varDec>
				<keyword> var </keyword>
				<keyword> int </keyword>
				<identifier> a </identifier>
				<symbol> , </symbol>
				<identifier> e </identifier>
				<symbol> , </symbol>
				<identifier> t </identifier>
				<symbol> ; </symbol>
			</varDec>
			<lateStatement>
				<keyword> let </keyword>
				<identifier> a </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier> 5 </identifier>
						</term>
					</expression>
					<symbol> ; </symbol>
			</lateStatement>
			<whileStatement>
				<keyword> while </keyword>
					<expression>
						<term>
							<identifier> piki </identifier>
						</term>
						<term>
							<identifier> piki </identifier>
						</term>
					</expression>
				<symbol> { </symbol>
				<whileStatement>
					<keyword> while </keyword>
						<expression>
							<term>
								<identifier> puku </identifier>
							</term>
							<term>
								<identifier> puku </identifier>
							</term>
						</expression>
					<symbol> { </symbol>
					<symbol> } </symbol>
				</whileStatement>
				<symbol> } </symbol>
			</whileStatement>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<class>
		<keyword> class </keyword>
		<identifier> Main2 </identifier>
		<symbol> { </symbol>
		<whileStatement>
			<keyword> while </keyword>
				<expression>
					<term>
						<identifier> blabla </identifier>
					</term>
					<term>
						<identifier> blalbal </identifier>
					</term>
				</expression>
			<symbol> { </symbol>
			<ifStatement>
				<keyword> if </keyword>
					<expression>
						<term>
							<identifier> bogi </identifier>
						</term>
						<term>
							<identifier> bigi </identifier>
						</term>
					</expression>
				<symbol> { </symbol>
				<lateStatement>
					<keyword> let </keyword>
					<identifier> a </identifier>
						<symbol> = </symbol>
						<expression>
							<term>
								<identifier> miki </identifier>
							</term>
						</expression>
						<symbol> ; </symbol>
				</lateStatement>
				<doStatement>
					<keyword> do </keyword>
					<identifier> function2.function1() </identifier>
					<symbol> ; </symbol>
				</doStatement>
				<symbol> } </symbol>
			</ifStatement>
			<symbol> } </symbol>
		</whileStatement>
		<symbol> } </symbol>
	</class>
	<symbol> } </symbol>
</class>
